// Считывает JSON файл index.json;
const path = require('path'); // Подключили модуль работы с каталогами в node.js?
const fs = require('fs'); //Подключили модуль работы с файлами в node.js?
// Что такое require?


const pathToJSON = path.resolve(__dirname, 'index.json'); //Не задан __dirname, значит указанный вторым аргументом файл ищется в том же каталоге, где лежит index.js?
// Получается, путь к нему мы запомнили и сохранили в эту константу?
// Что такое resolve?


const source = fs.readFileSync(pathToJSON, 'utf8'); //Второй аргумент - кодировка, в которой читать и передавать файл?
// readFileSync - сначала читаем файл, потом выполняем код дальше?

const data = JSON.parse(source); // parse делает из полученного JSON массив объектов, иначе у нас была бы длинная строка, которая не считалась бы объектом

console.log(data); //Проверил, как читается JSON, что вообще получается на выходе

// Выводит в консоль количество пользователей;
const names = data.map(key => key.name); //Создаю массив, в котором будут только данные с ключом 'name' из объекта data
console.log ('Количество пользователей: ', names.length);

// Выводит в консоль среднее аримфетическое по возрасту пользователей;
const age = data.map(key => key.age); //Создаем массив, в котором будет храниться возраст
console.log ('Средний возраст: ', age.reduce((acc, n) => acc + n, 0)/age.length);
//Выводим в консоль средний возраст
//При помощи метода reduce считаем сумму всех возрастов: acc - акумулятор, n - элемент массива. Аккумулятор сначала равен нулю (это мы указываем вторым аргументом reduce, нолик после запятой в конце скобок), затем мы пошагово проходимся по каждому элементу массива (так работает сам метод reduce) и добавляем к нему acc с прошлого шага (=> функция)
//Ну и делим на количество элементов массива, тем самым получаем среднее

// Выводит в консоль массив данных в формате: 32 Petr Vasin, 45 Yuichiro Ando, 33 Giuseppe Abbati, ...;

const anotherAgeName = data.map(key => key.age + ' ' + key.name); //Создаем массив, проходимся методом map под массиву data и элементы с ключами age и name складываем, записывая как элемент нового массива
console.log (anotherAgeName.join(', '));

// Выводит в консоль пользователей с навыком Paint;
const painters = data.filter(key => key.skills.includes('Paint')).map(key => key.name);
// берем массив data и сначала фильтруем его по тем элементам, значение ключа skills которых включает paint, а затем проходимся по отфильтрованному массиву еще раз при помощи map и забираем имена

console.log (painters);